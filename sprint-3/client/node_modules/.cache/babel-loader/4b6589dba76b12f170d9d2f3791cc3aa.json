{"ast":null,"code":"var _jsxFileName = \"/Users/oliverlevy/projects/brainflix/sprint-1/src/App.jsx\";\nimport React from 'react';\nimport Header from './components/Header/Header.jsx';\nimport Main from './components/Main/Main';\nimport MainData from './JSON/main-video-data.json';\nimport SideData from './JSON/side-video-data.json';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mainData: MainData[0],\n      comments: MainData[0].comments,\n      sideData: SideData\n    };\n\n    this.dynaDate = datePosted => {\n      let seconds = (Date.now() - datePosted) / 1000;\n\n      if (seconds < 60) {\n        return `${Math.trunc(seconds)}s ago`;\n      } else if (seconds < 3600) {\n        return `${Math.trunc(seconds / 60)}m ago`;\n      } else if (seconds < 86400) {\n        return `${Math.trunc(seconds / 60 / 60)}h ago`;\n      } else if (seconds < 2592000) {\n        return `${Math.trunc(seconds / 30 / 60 / 60)}d ago`;\n      } else {\n        //  let day = Date.getDate(datePosted)\n        //  let month = Date.getMonth(datePosted)\n        //  let year = Date.getFullYear(datePosted)\n        //  return `${month}/${day}/${year}`;\n        return datePosted;\n      }\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      this.setState({\n        comments: [...this.state.comments, {\n          name: \"Placeholder\",\n          comment: event.target.commentBox.value,\n          // timestamp: new Date().toDateString()\n          // timestamp: this.dynaDate(\"it's 3\")\n          timestamp: Date.now()\n        }]\n      });\n      event.target.reset();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Main, {\n      sideData: this.state.sideData,\n      submitHandler: event => this.submitHandler(event),\n      mainData: this.state.mainData,\n      comments: this.state.comments,\n      dynaDate: this.dynaDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/oliverlevy/projects/brainflix/sprint-1/src/App.jsx"],"names":["React","Header","Main","MainData","SideData","App","Component","state","mainData","comments","sideData","dynaDate","datePosted","seconds","Date","now","Math","trunc","submitHandler","event","preventDefault","setState","name","comment","target","commentBox","value","timestamp","reset","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;;AAGA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAEL,QAAQ,CAAC,CAAD,CADZ;AAENM,MAAAA,QAAQ,EAAEN,QAAQ,CAAC,CAAD,CAAR,CAAYM,QAFhB;AAGNC,MAAAA,QAAQ,EAAEN;AAHJ,KADuB;;AAAA,SAOhCO,QAPgC,GAOpBC,UAAD,IAAgB;AACzB,UAAIC,OAAO,GAAG,CAACC,IAAI,CAACC,GAAL,KAAaH,UAAd,IAA4B,IAA1C;;AACA,UAAGC,OAAO,GAAG,EAAb,EAAgB;AACf,eAAQ,GAAEG,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAoB,OAA9B;AACA,OAFD,MAEO,IAAGA,OAAO,GAAG,IAAb,EAAkB;AACvB,eAAQ,GAAEG,IAAI,CAACC,KAAL,CAAWJ,OAAO,GAAG,EAArB,CAAyB,OAAnC;AACD,OAFM,MAEA,IAAGA,OAAO,GAAG,KAAb,EAAmB;AACxB,eAAQ,GAAEG,IAAI,CAACC,KAAL,CAAYJ,OAAO,GAAG,EAAX,GAAiB,EAA5B,CAAgC,OAA1C;AACD,OAFM,MAEA,IAAGA,OAAO,GAAG,OAAb,EAAqB;AAC1B,eAAQ,GAAEG,IAAI,CAACC,KAAL,CAAaJ,OAAO,GAAG,EAAX,GAAiB,EAAlB,GAAwB,EAAnC,CAAuC,OAAjD;AACD,OAFM,MAEA;AACN;AACA;AACA;AACA;AACC,eAAOD,UAAP;AACD;AAEF,KAzB+B;;AAAA,SA2B/BM,aA3B+B,GA2BdC,KAAD,IAAW;AACzBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,QAAL,CACE;AAACZ,QAAAA,QAAQ,EAAE,CACT,GAAG,KAAKF,KAAL,CAAWE,QADL,EAET;AACEa,UAAAA,IAAI,EAAE,aADR;AAEEC,UAAAA,OAAO,EAAEJ,KAAK,CAACK,MAAN,CAAaC,UAAb,CAAwBC,KAFnC;AAGE;AACA;AACAC,UAAAA,SAAS,EAAEb,IAAI,CAACC,GAAL;AALb,SAFS;AAAX,OADF;AAWAI,MAAAA,KAAK,CAACK,MAAN,CAAaI,KAAb;AACD,KAzC8B;AAAA;;AA4C/BC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD;AACA,MAAA,QAAQ,EAAE,KAAKtB,KAAL,CAAWG,QADrB;AAEA,MAAA,aAAa,EAAES,KAAK,IAAI,KAAKD,aAAL,CAAmBC,KAAnB,CAFxB;AAGA,MAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWC,QAHrB;AAIA,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAJrB;AAKA,MAAA,QAAQ,EAAE,KAAKE,QALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAYD;;AAzD8B;;AA4DjC,eAAeN,GAAf","sourcesContent":["import React from 'react';\nimport Header from './components/Header/Header.jsx'\nimport Main from './components/Main/Main'\nimport MainData from './JSON/main-video-data.json'\nimport SideData from './JSON/side-video-data.json'\n\n\nclass App extends React.Component{\n  state = {\n    mainData: MainData[0],\n    comments: MainData[0].comments,\n    sideData: SideData\n }\n\n dynaDate = (datePosted) => {\n   let seconds = (Date.now() - datePosted) / 1000\n   if(seconds < 60){\n    return `${Math.trunc(seconds)}s ago`\n   } else if(seconds < 3600){\n     return `${Math.trunc(seconds / 60)}m ago`\n   } else if(seconds < 86400){\n     return `${Math.trunc((seconds / 60) / 60)}h ago`\n   } else if(seconds < 2592000){\n     return `${Math.trunc(((seconds / 30) / 60) / 60)}d ago`\n   } else {\n    //  let day = Date.getDate(datePosted)\n    //  let month = Date.getMonth(datePosted)\n    //  let year = Date.getFullYear(datePosted)\n    //  return `${month}/${day}/${year}`;\n     return datePosted\n   }\n   \n }\n\n  submitHandler = (event) => {\n    event.preventDefault()\n    this.setState(\n      {comments: [\n        ...this.state.comments, \n        {\n          name: \"Placeholder\",\n          comment: event.target.commentBox.value,\n          // timestamp: new Date().toDateString()\n          // timestamp: this.dynaDate(\"it's 3\")\n          timestamp: Date.now()\n        }]\n      })\n    event.target.reset()\n  }\n\n\n  render(){\n    return (\n      <div>\n        <Header />\n        <Main\n        sideData={this.state.sideData}\n        submitHandler={event => this.submitHandler(event)} \n        mainData={this.state.mainData} \n        comments={this.state.comments}\n        dynaDate={this.dynaDate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}