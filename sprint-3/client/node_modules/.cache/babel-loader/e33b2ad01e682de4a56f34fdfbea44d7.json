{"ast":null,"code":"var _jsxFileName = \"/Users/oliverlevy/projects/brainflix/sprint-2/src/App.jsx\";\nimport React from \"react\";\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header/Header.jsx\";\nimport Main from \"./components/Main/Main\";\nimport MainData from \"./JSON/main-video-data.json\";\nimport SideData from \"./JSON/side-video-data.json\";\nimport Uploads from \"./components/Uploads/Uploads\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mainData: MainData[0],\n      comments: MainData[0].comments,\n      sideData: SideData\n    };\n\n    this.dynaDate = datePosted => {\n      let seconds = (Date.now() - datePosted) / 1000;\n      let unix = new Date(datePosted);\n      let day = unix.getDate();\n      let month = unix.getMonth() + 1;\n      let year = unix.getFullYear();\n\n      if (seconds < 60) {\n        return `${Math.trunc(seconds)}s ago`;\n      } else if (seconds < 3600) {\n        return `${Math.trunc(seconds / 60)}m ago`;\n      } else if (seconds < 86400) {\n        return `${Math.trunc(seconds / 60 / 60)}h ago`;\n      } else if (seconds < 2592000) {\n        return `${Math.trunc(seconds / 30 / 60 / 60)}d ago`;\n      } else {\n        return `${month}/${day}/${year}`;\n      }\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n\n      if (event.target.commentBox.value == \"\") {\n        return alert(\"There is nothing in your comment, please stop being a hecker.\");\n      } else {\n        this.setState({\n          comments: [...this.state.comments, {\n            name: \"Placeholder\",\n            comment: event.target.commentBox.value,\n            timestamp: Date.now()\n          }]\n        });\n      }\n\n      event.target.reset();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"HOME\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/uploads\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"UPLOADS\"), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: routerProps => /*#__PURE__*/React.createElement(Main, Object.assign({\n        sideData: this.state.sideData,\n        submitHandler: event => this.submitHandler(event),\n        mainData: this.state.mainData,\n        comments: this.state.comments,\n        dynaDate: this.dynaDate\n      }, routerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      })),\n      component: Main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/uploads\",\n      component: Uploads,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/oliverlevy/projects/brainflix/sprint-2/src/App.jsx"],"names":["React","BrowserRouter","Route","Link","Switch","Header","Main","MainData","SideData","Uploads","App","Component","state","mainData","comments","sideData","dynaDate","datePosted","seconds","Date","now","unix","day","getDate","month","getMonth","year","getFullYear","Math","trunc","submitHandler","event","preventDefault","target","commentBox","value","alert","setState","name","comment","timestamp","reset","render","routerProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header/Header.jsx\";\nimport Main from \"./components/Main/Main\";\nimport MainData from \"./JSON/main-video-data.json\";\nimport SideData from \"./JSON/side-video-data.json\";\nimport Uploads from \"./components/Uploads/Uploads\";\n\nclass App extends React.Component {\n  state = {\n    mainData: MainData[0],\n    comments: MainData[0].comments,\n    sideData: SideData,\n  };\n\n  dynaDate = (datePosted) => {\n    let seconds = (Date.now() - datePosted) / 1000;\n    let unix = new Date(datePosted);\n    let day = unix.getDate();\n    let month = unix.getMonth() + 1;\n    let year = unix.getFullYear();\n    if (seconds < 60) {\n      return `${Math.trunc(seconds)}s ago`;\n    } else if (seconds < 3600) {\n      return `${Math.trunc(seconds / 60)}m ago`;\n    } else if (seconds < 86400) {\n      return `${Math.trunc(seconds / 60 / 60)}h ago`;\n    } else if (seconds < 2592000) {\n      return `${Math.trunc(seconds / 30 / 60 / 60)}d ago`;\n    } else {\n      return `${month}/${day}/${year}`;\n    }\n  };\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    if (event.target.commentBox.value == \"\") {\n      return alert(\n        \"There is nothing in your comment, please stop being a hecker.\"\n      );\n    } else {\n      this.setState({\n        comments: [\n          ...this.state.comments,\n          {\n            name: \"Placeholder\",\n            comment: event.target.commentBox.value,\n            timestamp: Date.now(),\n          },\n        ],\n      });\n    }\n    event.target.reset();\n  };\n\n  render() {\n    return (\n      <div>\n        <Header />\n        {/* <Main\n        sideData={this.state.sideData}\n        submitHandler={event => this.submitHandler(event)} \n        mainData={this.state.mainData} \n        comments={this.state.comments}\n        dynaDate={this.dynaDate}\n        /> */}\n        \n        <BrowserRouter>\n        <Link to='/'>HOME</Link>\n        <Link to='/uploads'>UPLOADS</Link>\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              render={(routerProps) => \n                <Main\n                  sideData={this.state.sideData}\n                  submitHandler={(event) => this.submitHandler(event)}\n                  mainData={this.state.mainData}\n                  comments={this.state.comments}\n                  dynaDate={this.dynaDate}\n                  {...routerProps}\n                />\n              }\n              component={Main}\n            />\n            <Route path=\"/uploads\" component={Uploads} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}