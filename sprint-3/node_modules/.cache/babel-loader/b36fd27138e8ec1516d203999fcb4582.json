{"ast":null,"code":"var _jsxFileName = \"/Users/oliverlevy/projects/brainflix/sprint-2/src/App.jsx\";\nimport React from \"react\";\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header/Header.jsx\";\nimport Main from \"./components/Main/Main\";\nimport Uploads from \"./components/Uploads/Uploads\";\n\nclass App extends React.Component {\n  // state = {\n  //   mainData: MainData[0],\n  //   comments: MainData[0].comments,\n  //   sideData: SideData,\n  // };\n  // dynaDate = (datePosted) => {\n  //   let seconds = (Date.now() - datePosted) / 1000;\n  //   let unix = new Date(datePosted);\n  //   let day = unix.getDate();\n  //   let month = unix.getMonth() + 1;\n  //   let year = unix.getFullYear();\n  //   if (seconds < 60) {\n  //     return `${Math.trunc(seconds)}s ago`;\n  //   } else if (seconds < 3600) {\n  //     return `${Math.trunc(seconds / 60)}m ago`;\n  //   } else if (seconds < 86400) {\n  //     return `${Math.trunc(seconds / 60 / 60)}h ago`;\n  //   } else if (seconds < 2592000) {\n  //     return `${Math.trunc(seconds / 30 / 60 / 60)}d ago`;\n  //   } else {\n  //     return `${month}/${day}/${year}`;\n  //   }\n  // };\n  // submitHandler = (event) => {\n  //   event.preventDefault();\n  //   if (event.target.commentBox.value == \"\") {\n  //     return alert(\n  //       \"There is nothing in your comment, please stop being a hecker.\"\n  //     );\n  //   } else {\n  //     this.setState({\n  //       comments: [\n  //         ...this.state.comments,\n  //         {\n  //           name: \"Placeholder\",\n  //           comment: event.target.commentBox.value,\n  //           timestamp: Date.now(),\n  //         },\n  //       ],\n  //     });\n  //   }\n  //   event.target.reset();\n  // };\n  render() {\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/uploads\",\n      component: Uploads,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/oliverlevy/projects/brainflix/sprint-2/src/App.jsx"],"names":["React","BrowserRouter","Route","Link","Switch","Header","Main","Uploads","App","Component","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,MAArC,QAAmD,kBAAnD;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAeE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,SAAS,EAAEJ,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,eAgBE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAEC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CAFF,CADF;AAuBD;;AAvE+B;;AA0ElC,eAAeC,GAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header/Header.jsx\";\nimport Main from \"./components/Main/Main\";\nimport Uploads from \"./components/Uploads/Uploads\";\n\nclass App extends React.Component {\n  // state = {\n  //   mainData: MainData[0],\n  //   comments: MainData[0].comments,\n  //   sideData: SideData,\n  // };\n\n  // dynaDate = (datePosted) => {\n  //   let seconds = (Date.now() - datePosted) / 1000;\n  //   let unix = new Date(datePosted);\n  //   let day = unix.getDate();\n  //   let month = unix.getMonth() + 1;\n  //   let year = unix.getFullYear();\n  //   if (seconds < 60) {\n  //     return `${Math.trunc(seconds)}s ago`;\n  //   } else if (seconds < 3600) {\n  //     return `${Math.trunc(seconds / 60)}m ago`;\n  //   } else if (seconds < 86400) {\n  //     return `${Math.trunc(seconds / 60 / 60)}h ago`;\n  //   } else if (seconds < 2592000) {\n  //     return `${Math.trunc(seconds / 30 / 60 / 60)}d ago`;\n  //   } else {\n  //     return `${month}/${day}/${year}`;\n  //   }\n  // };\n\n  // submitHandler = (event) => {\n  //   event.preventDefault();\n  //   if (event.target.commentBox.value == \"\") {\n  //     return alert(\n  //       \"There is nothing in your comment, please stop being a hecker.\"\n  //     );\n  //   } else {\n  //     this.setState({\n  //       comments: [\n  //         ...this.state.comments,\n  //         {\n  //           name: \"Placeholder\",\n  //           comment: event.target.commentBox.value,\n  //           timestamp: Date.now(),\n  //         },\n  //       ],\n  //     });\n  //   }\n  //   event.target.reset();\n  // };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Header />\n        <Switch>\n          {/* <Route\n            path=\"/\"\n            exact\n            render={(routerProps) => (\n              <Main\n                sideData={this.state.sideData}\n                submitHandler={(event) => this.submitHandler(event)}\n                mainData={this.state.mainData}\n                comments={this.state.comments}\n                dynaDate={this.dynaDate}\n                {...routerProps}\n              />\n            )}\n          /> */}\n          <Route path='/' exact component={Main} />\n          <Route path=\"/uploads\" component={Uploads} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}