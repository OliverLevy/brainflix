{"ast":null,"code":"var _jsxFileName = \"/Users/oliverlevy/projects/brainflix/sprint-2/src/App.jsx\";\nimport React from 'react';\nimport { BrowserRouter, Route, Link, Switch } from 'react-router-dom';\nimport Header from './components/Header/Header.jsx';\nimport Main from './components/Main/Main';\nimport MainData from './JSON/main-video-data.json';\nimport SideData from './JSON/side-video-data.json';\nimport Uploads from './components/Uploads/Uploads';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mainData: MainData[0],\n      comments: MainData[0].comments,\n      sideData: SideData\n    };\n\n    this.dynaDate = datePosted => {\n      let seconds = (Date.now() - datePosted) / 1000;\n      let unix = new Date(datePosted);\n      let day = unix.getDate();\n      let month = unix.getMonth() + 1;\n      let year = unix.getFullYear();\n\n      if (seconds < 60) {\n        return `${Math.trunc(seconds)}s ago`;\n      } else if (seconds < 3600) {\n        return `${Math.trunc(seconds / 60)}m ago`;\n      } else if (seconds < 86400) {\n        return `${Math.trunc(seconds / 60 / 60)}h ago`;\n      } else if (seconds < 2592000) {\n        return `${Math.trunc(seconds / 30 / 60 / 60)}d ago`;\n      } else {\n        return `${month}/${day}/${year}`;\n      }\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n\n      if (event.target.commentBox.value == \"\") {\n        return alert(\"There is nothing in your comment, please stop being a hecker.\");\n      } else {\n        this.setState({\n          comments: [...this.state.comments, {\n            name: \"Placeholder\",\n            comment: event.target.commentBox.value,\n            timestamp: Date.now()\n          }]\n        });\n      }\n\n      event.target.reset();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Main, {\n      sideData: this.state.sideData,\n      submitHandler: event => this.submitHandler(event),\n      mainData: this.state.mainData,\n      comments: this.state.comments,\n      dynaDate: this.dynaDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Uploads, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/uploads\",\n      component: Uploads,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/oliverlevy/projects/brainflix/sprint-2/src/App.jsx"],"names":["React","BrowserRouter","Route","Link","Switch","Header","Main","MainData","SideData","Uploads","App","Component","state","mainData","comments","sideData","dynaDate","datePosted","seconds","Date","now","unix","day","getDate","month","getMonth","year","getFullYear","Math","trunc","submitHandler","event","preventDefault","target","commentBox","value","alert","setState","name","comment","timestamp","reset","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {BrowserRouter, Route, Link, Switch} from 'react-router-dom'\nimport Header from './components/Header/Header.jsx'\nimport Main from './components/Main/Main'\nimport MainData from './JSON/main-video-data.json'\nimport SideData from './JSON/side-video-data.json'\nimport Uploads from './components/Uploads/Uploads'\n\n\nclass App extends React.Component{\n  state = {\n    mainData: MainData[0],\n    comments: MainData[0].comments,\n    sideData: SideData\n }\n\n  dynaDate = (datePosted) => {\n    let seconds = (Date.now() - datePosted) / 1000;\n    let unix = new Date(datePosted)\n    let day = unix.getDate();\n    let month = unix.getMonth() + 1;\n    let year = unix.getFullYear();\n    if(seconds < 60){\n      return `${Math.trunc(seconds)}s ago`\n    } else if(seconds < 3600){\n      return `${Math.trunc(seconds / 60)}m ago`\n    } else if(seconds < 86400){\n      return `${Math.trunc((seconds / 60) / 60)}h ago`\n    } else if(seconds < 2592000){\n      return `${Math.trunc(((seconds / 30) / 60) / 60)}d ago`\n    } else {\n      return `${month}/${day}/${year}`;\n    }\n   \n }\n\n  submitHandler = (event) => {\n    event.preventDefault()\n    if(event.target.commentBox.value == \"\"){\n      return alert(\"There is nothing in your comment, please stop being a hecker.\")\n    } else {\n      this.setState(\n        {comments: [\n          ...this.state.comments, \n          {\n            name: \"Placeholder\",\n            comment: event.target.commentBox.value,\n            timestamp: Date.now()\n          }]\n        })\n    }\n    event.target.reset()\n  }\n\n\n  render(){\n    return (\n      <div>\n        <Header />\n        <Main\n        sideData={this.state.sideData}\n        submitHandler={event => this.submitHandler(event)} \n        mainData={this.state.mainData} \n        comments={this.state.comments}\n        dynaDate={this.dynaDate}\n        />\n        <Uploads />\n        <BrowserRouter>\n        <Switch>\n          <Route path='/' exact component={Main} />\n          <Route path='/uploads' component={Uploads} />\n        </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}